# Generated by Django 2.2.10 on 2020-06-22 02:03

import apps.exam.path_services
import apps.exam.storage
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("teacher", models.CharField(max_length=100)),
                ("university", models.CharField(max_length=100)),
                ("course_name", models.CharField(max_length=100)),
                ("course_code", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "style",
                    models.CharField(
                        choices=[("C", "Compact"), ("O", "Other")],
                        default="C",
                        max_length=1,
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("EN", "English"), ("ES", "Spanish")],
                        default="EN",
                        max_length=2,
                    ),
                ),
                ("due_date", models.DateField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "pdf_normal",
                    models.FileField(
                        storage=apps.exam.storage.OverwriteStorage(),
                        upload_to=apps.exam.path_services.exam_normal_path,
                    ),
                ),
                (
                    "pdf_solution",
                    models.FileField(
                        storage=apps.exam.storage.OverwriteStorage(),
                        upload_to=apps.exam.path_services.exam_solution_path,
                    ),
                ),
                (
                    "tex_file",
                    models.FileField(
                        storage=apps.exam.storage.OverwriteStorage(),
                        upload_to=apps.exam.path_services.exam_tex_path,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExamProblemChoice",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.PositiveIntegerField(default=2)),
            ],
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "image",
                    models.ImageField(
                        storage=apps.exam.storage.OverwriteStorage(),
                        upload_to=apps.exam.path_services.image_path,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "name",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                )
            ],
        ),
        migrations.CreateModel(
            name="Problem",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("author", models.CharField(max_length=100)),
                ("statement_content", models.TextField(max_length=50000)),
                ("solution_content", models.TextField(blank=True, max_length=50000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "tex_file",
                    models.FileField(
                        storage=apps.exam.storage.OverwriteStorage(),
                        upload_to=apps.exam.path_services.problem_tex_path,
                    ),
                ),
                (
                    "pbtex_file",
                    models.FileField(
                        storage=apps.exam.storage.OverwriteStorage(),
                        upload_to=apps.exam.path_services.problem_pbtex_path,
                    ),
                ),
                (
                    "pdf",
                    models.FileField(
                        storage=apps.exam.storage.OverwriteStorage(),
                        upload_to=apps.exam.path_services.problem_pdf_path,
                    ),
                ),
                ("topics", models.ManyToManyField(to="exam.Topic")),
            ],
        ),
    ]
